package ro.lrg.method.defragmenter.preferences;

import java.util.HashMap;
import java.util.Map;

public interface Defaults {
	String NULL = "null";
	
	//treshold preferences
	String ATFD_PREFERENCE_NAME = "ATFDTreshold";
	String FDP_PREFERENCE_NAME = "FDPTreshold";
	String LAA_PREFERENCE_NAME = "LAATreshold";
	
	String ATFD_DEFAULT_VALUE = "2";
	String FDP_DEFAULT_VALUE = "2";
	String LAA_DEFAULT_VALUE = String.valueOf(1.0/3);
	
	//other preferences
	String APPLY_LONG_METHOD_IDENTIFICATION_PREFERENCE_NAME = "apply_long_method_identification";
	String CONSIDER_STATIC_FIELD_ACCESS_PREFERENCE_NAME = "consider_static_field_acces";
	String LIBRARY_CHECK_PREFERENCE_NAME = "library_check";
	String MIN_BLOCK_SIZE_PREFERENCE_NAME = "min_block_size";
	
	String APPLY_LONG_METHOD_IDENTIFICATION_DEFAULT_VALUE = "false";
	String CONSIDER_STATIC_FIELD_ACCESS_DEFAULT_VALUE = "false";
	String LIBRARY_CHECK_DEFAULT_VALUE = "true";
	String MIN_BLOCK_SIZE_DEFAULT_VALUE = NULL;
	
	@SuppressWarnings("serial")
	Map<String,String> DEFAULT_VALUES = new HashMap<String,String>() {{
		put(ATFD_PREFERENCE_NAME, ATFD_DEFAULT_VALUE);
		put(FDP_PREFERENCE_NAME, FDP_DEFAULT_VALUE);
		put(LAA_PREFERENCE_NAME, LAA_DEFAULT_VALUE);
		put(APPLY_LONG_METHOD_IDENTIFICATION_PREFERENCE_NAME, APPLY_LONG_METHOD_IDENTIFICATION_DEFAULT_VALUE);
		put(CONSIDER_STATIC_FIELD_ACCESS_PREFERENCE_NAME, CONSIDER_STATIC_FIELD_ACCESS_DEFAULT_VALUE);
		put(LIBRARY_CHECK_PREFERENCE_NAME, LIBRARY_CHECK_DEFAULT_VALUE);
		put(MIN_BLOCK_SIZE_PREFERENCE_NAME, MIN_BLOCK_SIZE_DEFAULT_VALUE);
	}};
}
